{"version":3,"sources":["counter.jsx","ResForm.jsx","home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Counter","useState","count","setCount","className","onClick","style","color","ResForm","history","useHistory","initialValues","name","emailId","password","phoneNo","onSubmit","values","setSubmitting","setTimeout","data","push","console","log","validationSchema","Yup","shape","required","matches","email","min","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","autoComplete","src","alt","type","value","onChange","onBlur","placeholder","disabled","Home","App","to","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dacb8d2.chunk.js","sourcesContent":["import React, {  useState} from \"react\";\r\nimport './counter.css';\r\n\r\nfunction Counter(){\r\n        const [count, setCount] = useState(0);\r\n\r\n\r\n        \r\n    \r\n    return (\r\n        <>\r\n        <div className=\"counter_inner\">\r\n\r\n      <button onClick={()=>setCount(count -1)}>-</button>\r\n      <div className=\"count\" style={{color :  count <5 ? \"red\"  : count>100 ? \"green\" : \"\" }}>{count}</div>\r\n      <button onClick={()=>setCount(count +1)}>+</button>\r\n        </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Counter;","import React from \"react\";\r\nimport { Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport data from './data.json';\r\nimport \"./ResForm.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction ResForm() {\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n     <Formik\r\n        initialValues={{name:'', emailId: \"\", password: \"\" ,phoneNo :''}}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setTimeout(() => {\r\n           if(data.data.emailId === values.emailId && data.data.phoneNo === values.phoneNo && data.data.password === values.password && data.data.name === values.name){\r\n             history.push(\"/Home\");\r\n           }\r\n            console.log(\"log in\", values, data);\r\n          }, 500);\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          name : Yup.string().required(\"Required\").matches(/^[a-zA-Z]+(([-][a-zA-Z ])?[a-zA-Z])$/,\"name should contain alphabet and '-'\"),\r\n          emailId: Yup.string().email().required(\"Required\"),\r\n          phoneNo : Yup.string().required(\"required\").matches(/[0-9]/, \"mobile should 10 digit\"),\r\n          password: Yup.string()\r\n            .required(\"No password provided\")\r\n            .min(8, \"password is too short\")\r\n            .matches(/(?=.*[0-9])/, \"password should contain a number\"),\r\n        })}\r\n      >\r\n        {(props) => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            isSubmitting,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n          } = props;\r\n\r\n          return (\r\n            <form autoComplete=\"off\" onSubmit={handleSubmit}>\r\n            <div className=\"inner\">\r\n            <div className=\"profile\"><img src=\"https://images.unsplash.com/photo-1430990480609-2bf7c02a6b1a?ixid=MXwxMjA3fDB8MHxzZWFyY2h8OHx8ZnJlZXxlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" alt=\"profile\"/></div>\r\n            <div className=\"form_field\">\r\n              <input\r\n                type=\"text\"\r\n                value={values.name}\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                placeholder=\"Name\"\r\n                className={errors.name && touched.name && \"err\" }\r\n              />\r\n              {errors.name && touched.name && (\r\n                  <div className=\"err_msg\">{errors.name}</div>\r\n              )}\r\n              </div>\r\n              <div className=\"form_field\">\r\n\r\n              <input\r\n                type=\"text\"\r\n                value={values.emailId}\r\n                name=\"emailId\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                placeholder=\"Email\"\r\n                className={errors.emailId && touched.emailId && \"err\" }\r\n              />\r\n              {errors.emailId && touched.emailId && (\r\n                  <div className=\"err_msg\">{errors.emailId}</div>\r\n              )}\r\n              </div>\r\n              <div className=\"form_field\">\r\n\r\n              <input\r\n                type=\"text\"\r\n                value={values.phoneNo}\r\n                name=\"phoneNo\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                placeholder=\"Mobile number\"\r\n                className={errors.phoneNo && touched.phoneNo && \"err\" }\r\n              />\r\n              {errors.phoneNo && touched.phoneNo && (\r\n                  <div className=\"err_msg\">{errors.phoneNo}</div>\r\n              )}\r\n              </div>\r\n              <div className=\"form_field\">\r\n\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.password}\r\n                placeholder=\"password\"\r\n                className={errors.password && touched.password && \"err\" }\r\n              />\r\n               {errors.password && touched.password && (\r\n                  <div className=\"err_msg\">{errors.password}</div>\r\n              )}\r\n              </div>\r\n              <button type=\"submit\" disabled={isSubmitting}>\r\n                Register\r\n              </button>\r\n              </div>\r\n            </form>\r\n          );\r\n        }}\r\n      </Formik>\r\n   \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResForm;","import React from \"react\";\r\n\r\nimport \"./home.css\";\r\nfunction Home(){\r\n\r\n\r\n        \r\n    \r\n    return (\r\n        <>\r\n       <h1>hello world</h1>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Home;","\nimport './App.css';\nimport Counter from './counter';\nimport ResForm from \"./ResForm\";\nimport {BrowserRouter as Router ,Route , Link} from 'react-router-dom';\nimport Home from './home';\n\nfunction App() {\n  return (\n    <div className=\"page\">\n    <div className=\"nav\">\n\n    <Router>\n      <Link to=\"/counter\">Counter</Link>\n      <Link to=\"/login\">Login</Link>\n    <Route path=\"/counter\" component={Counter}></Route>\n    <Route path=\"/login\" component={ResForm}></Route>\n    <Route path=\"/Home\" component={Home}></Route>\n    </Router>\n    </div>\n    {/* <Counter></Counter>\n    <ResForm></ResForm> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}